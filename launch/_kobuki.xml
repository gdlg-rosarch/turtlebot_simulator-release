<launch>
  <arg name="base"/>
  <arg name="stacks"/>
  <arg name="3d_sensor"/>
  
  <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />
  <param name="robot_description" command="$(arg urdf_file)" />

  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model" args="$(optenv ROBOT_INITIAL_POSE) -unpause -urdf -param robot_description -model mobile_base" respawn="false"/>

<!--   <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" > -->
<!--     <rosparam command="load" file="$(find turtlebot_bringup)/param/kobuki/diagnostics.yaml" /> -->
<!--   </node> -->
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- The odometry estimator -->
<!--   <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf"> -->
<!--     <param name="freq" value="30.0"/> -->
<!--     <param name="sensor_timeout" value="1.0"/> -->
<!--     <param name="publish_tf" value="true"/> -->
<!--     <param name="odom_used" value="true"/> -->
<!--     <param name="imu_used" value="false"/> -->
<!--     <param name="vo_used" value="false"/> -->
<!--   </node> -->

  <!-- Point cloud throttling -->
<!--   <node pkg="nodelet" type="nodelet" name="pointcloud_throttle" args="load pointcloud_to_laserscan/CloudThrottle openni_manager" respawn="true"> -->
<!--     <param name="max_rate" value="20.0"/> -->
<!--     <remap from="cloud_in" to="camera/depth/points"/> -->
<!--     <remap from="cloud_out" to="cloud_throttled"/> -->
<!--   </node> -->

  <!-- Fake Laser -->
<!--   <node pkg="nodelet" type="nodelet" name="kinect_laser" args="load pointcloud_to_laserscan/CloudToScan openni_manager" respawn="true"> -->
<!--     <param name="output_frame_id" value="/camera_depth_frame"/> -->
<!--     heights are in the (optical?) frame of the kinect -->
<!--     <param name="min_height" value="-0.15"/> -->
<!--     <param name="max_height" value="0.15"/> -->
<!--     <remap from="cloud" to="cloud_throttled"/> -->
<!--     <remap from="scan" to="scan"/> -->
<!--   </node> -->

  <!-- Fake Laser (narrow one, for localization -->
<!--   <node pkg="nodelet" type="nodelet" name="kinect_laser_narrow" args="load pointcloud_to_laserscan/CloudToScan openni_manager" respawn="true"> -->
<!--     <param name="output_frame_id" value="/camera_depth_frame"/> -->
<!--     heights are in the (optical?) frame of the kinect -->
<!--     <param name="min_height" value="-0.025"/> -->
<!--     <param name="max_height" value="0.025"/> -->
<!--     <remap from="cloud" to="cloud_throttled"/> -->
<!--     <remap from="scan" to="narrow_scan"/> -->
<!--   </node> -->
</launch>
