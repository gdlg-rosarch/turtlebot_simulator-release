<launch>
  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
  </include>
  
  <include file="$(find turtlebot_gazebo)/launch/include/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>
  
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <remap from="imu_data" to="mobile_base/sensors/imu_data"/>
    <remap from="robot_pose_ekf/odom" to="odom_combined"/>
    <param name="freq" value="30.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="true"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="false"/>
    <param name="output_frame" value="odom"/>
  </node>
  
<!-- TODO -->
<!--   <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" > -->
<!--     <rosparam command="load" file="$(find turtlebot_bringup)/param/$(arg base)/diagnostics.yaml" /> -->
<!--   </node> -->
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>
  
  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>

  <!-- Fake Laser (narrow one, for localization TODO -->
<!--   <node pkg="nodelet" type="nodelet" name="kinect_laser_narrow" args="load pointcloud_to_laserscan/CloudToScan openni_manager" respawn="true"> -->
<!--     <param name="output_frame_id" value="/camera_depth_frame"/> -->
<!--     heights are in the (optical?) frame of the kinect -->
<!--     <param name="min_height" value="-0.025"/> -->
<!--     <param name="max_height" value="0.025"/> -->
<!--     <remap from="cloud" to="/cloud_throttled"/> -->
<!--     <remap from="scan" to="/narrow_scan"/> -->
<!--   </node> -->
  
  <!-- TODO: Point cloud throttling - Still needed? -->
<!--   <node pkg="nodelet" type="nodelet" name="pointcloud_nodelet_manager" args="manager"/> -->
<!--   <node pkg="nodelet" type="nodelet" name="pointcloud_throttle" -->
<!--         args="load pointcloud_to_laserscan/CloudThrottle nodelet_manager"> -->
<!--     <param name="max_rate" value="20.0"/> -->
<!--     <remap from="cloud_in" to="/camera/depth/points"/> -->
<!--     <remap from="cloud_out" to="cloud_throttled"/> -->
<!--   </node> -->
</launch>
